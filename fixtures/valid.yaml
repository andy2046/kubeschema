---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
  labels:
    app: my-app
    chart: my-app-1.0.0-SNAPSHOT
    env: production
    release: RELEASE-NAME
data:
  LOG_DIR: "/var/log/my-app"
  LOG_LEVEL: "WARN"
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: fast
  labels:
    app: my-app
    chart: my-app-1.0.0-SNAPSHOT
    env: production
    release: RELEASE-NAME
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
  zone: us-central1-a
---
apiVersion: v1
kind: Service
metadata:
  name: my-app-headless
  labels:
    app: my-app
    chart: my-app-1.0.0-SNAPSHOT
    env: production
    release: RELEASE-NAME
spec:
  clusterIP: None
  ports:
  - name: server
    port: 8080
    targetPort: server
    protocol: TCP
  selector:
    app: my-app
    release: RELEASE-NAME
---
apiVersion: v1
kind: Service
metadata:
  name: my-app
  labels:
    app: my-app
    chart: my-app-1.0.0-SNAPSHOT
    env: production
    release: RELEASE-NAME
spec:
  type: ClusterIP
  ports:
  - name: client
    port: 80
    protocol: TCP
    targetPort: client
  selector:
    app: my-app
    release: RELEASE-NAME
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-app
  labels:
    app: my-app
    chart: my-app-1.0.0-SNAPSHOT
    env: production
    release: RELEASE-NAME
spec:
  serviceName: my-app-headless
  replicas: 3
  selector:
    matchLabels:
      app: my-app
      release: RELEASE-NAME
  template:
    metadata:
      labels:
        app: my-app
        release: RELEASE-NAME
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                 matchExpressions:
                   - key: app
                     operator: In
                     values:
                     - my-app
              topologyKey: kubernetes.io/hostname
      containers:
      - name: my-app
        image: my-app:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 1Gi
        ports:
        - name: server
          containerPort: 8080
          protocol: TCP
        envFrom:
          - configMapRef:
              name: my-app-config
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "my-app-ready"
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "my-app-ready"
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/my-app
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      storageClassName: fast
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
